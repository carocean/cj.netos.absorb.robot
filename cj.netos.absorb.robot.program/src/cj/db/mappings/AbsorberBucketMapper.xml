<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.absorb.robot.mapper.AbsorberBucketMapper">
  <resultMap id="BaseResultMap" type="cj.netos.absorb.robot.model.AbsorberBucket">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="absorber" jdbcType="VARCHAR" property="absorber" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="w_invest_amount" jdbcType="DECIMAL" property="wInvestAmount" />
    <result column="p_invest_amount" jdbcType="DECIMAL" property="pInvestAmount" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="times" jdbcType="BIGINT" property="times" />
    <result column="utime" jdbcType="VARCHAR" property="utime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    absorber, bank, w_invest_amount, p_invest_amount, price, times, utime
  </sql>
  <select id="selectByExample" parameterType="cj.netos.absorb.robot.model.AbsorberBucketExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from absorber_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from absorber_bucket
    where absorber = #{absorber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from absorber_bucket
    where absorber = #{absorber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.absorb.robot.model.AbsorberBucketExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from absorber_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into absorber_bucket (absorber, bank, w_invest_amount, 
      p_invest_amount, price, times, 
      utime)
    values (#{absorber,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR}, #{wInvestAmount,jdbcType=DECIMAL}, 
      #{pInvestAmount,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, #{times,jdbcType=BIGINT}, 
      #{utime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into absorber_bucket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="absorber != null">
        absorber,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="wInvestAmount != null">
        w_invest_amount,
      </if>
      <if test="pInvestAmount != null">
        p_invest_amount,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="times != null">
        times,
      </if>
      <if test="utime != null">
        utime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="absorber != null">
        #{absorber,jdbcType=VARCHAR},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="wInvestAmount != null">
        #{wInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="pInvestAmount != null">
        #{pInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="times != null">
        #{times,jdbcType=BIGINT},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.absorb.robot.model.AbsorberBucketExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from absorber_bucket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber_bucket
    <set>
      <if test="record.absorber != null">
        absorber = #{record.absorber,jdbcType=VARCHAR},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.wInvestAmount != null">
        w_invest_amount = #{record.wInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.pInvestAmount != null">
        p_invest_amount = #{record.pInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.times != null">
        times = #{record.times,jdbcType=BIGINT},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber_bucket
    set absorber = #{record.absorber,jdbcType=VARCHAR},
      bank = #{record.bank,jdbcType=VARCHAR},
      w_invest_amount = #{record.wInvestAmount,jdbcType=DECIMAL},
      p_invest_amount = #{record.pInvestAmount,jdbcType=DECIMAL},
      price = #{record.price,jdbcType=DECIMAL},
      times = #{record.times,jdbcType=BIGINT},
      utime = #{record.utime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber_bucket
    <set>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="wInvestAmount != null">
        w_invest_amount = #{wInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="pInvestAmount != null">
        p_invest_amount = #{pInvestAmount,jdbcType=DECIMAL},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="times != null">
        times = #{times,jdbcType=BIGINT},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=VARCHAR},
      </if>
    </set>
    where absorber = #{absorber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber_bucket
    set bank = #{bank,jdbcType=VARCHAR},
      w_invest_amount = #{wInvestAmount,jdbcType=DECIMAL},
      p_invest_amount = #{pInvestAmount,jdbcType=DECIMAL},
      price = #{price,jdbcType=DECIMAL},
      times = #{times,jdbcType=BIGINT},
      utime = #{utime,jdbcType=VARCHAR}
    where absorber = #{absorber,jdbcType=VARCHAR}
  </update>
  <select id="pageAbsorberBucketGTEPrice" parameterType="cj.netos.absorb.robot.model.AbsorberBucket" resultMap="BaseResultMap">
    select bucket.*
    from absorber absorber ,absorber_bucket bucket
    where absorber.id=bucket.absorber
      and absorber.bankid=#{bankid}
      and absorber.state=1
      and bucket.price &gt;= #{price}
    order by bucket.price desc
    limit #{offset},#{limit}
  </select>
  <select id="pageAbsorberBucket" parameterType="cj.netos.absorb.robot.model.AbsorberBucket" resultMap="BaseResultMap">
    select bucket.*
    from absorber absorber ,absorber_bucket bucket
    where absorber.id=bucket.absorber
      and absorber.bankid=#{bankid}
      and absorber.state=1
    order by bucket.price desc
    limit #{offset},#{limit}
  </select>
  <select id="totalAbsorber" parameterType="cj.netos.absorb.robot.model.AbsorberBucket" resultType="cj.netos.absorb.robot.TotalAbsorber">
    select sum(bucket.price) as price,count(bucket.absorber) as count
    from absorber absorber ,absorber_bucket bucket
    where absorber.id=bucket.absorber
      and absorber.bankid=#{bankid}
      and absorber.state=1
    group by bucket.bank
  </select>
  <select id="totalAbsorberBeginWaaPrice" parameterType="cj.netos.absorb.robot.model.AbsorberBucket" resultType="cj.netos.absorb.robot.TotalAbsorber">
    select sum(bucket.price) as price,count(bucket.absorber) as count
    from absorber absorber ,absorber_bucket bucket
    where absorber.id=bucket.absorber
      and absorber.bankid=#{bankid}
      and absorber.state=1
      and price &gt;= #{price,jdbcType=DECIMAL}
    group by bucket.bank
  </select>
  <update id="updateByPersonInvest" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    update absorber_bucket
    set
    p_invest_amount = #{pInvestAmount,jdbcType=DECIMAL},
    price = #{price,jdbcType=DECIMAL},
    times = #{times,jdbcType=BIGINT},
    utime = #{utime,jdbcType=VARCHAR}
    where absorber = #{absorber,jdbcType=VARCHAR}
  </update>
  <update id="updateByWithdrawInvest" parameterType="cj.netos.absorb.robot.model.AbsorberBucket">
    update absorber_bucket
    set
    w_invest_amount = #{wInvestAmount,jdbcType=DECIMAL},
    price = #{price,jdbcType=DECIMAL},
    times = #{times,jdbcType=BIGINT},
    utime = #{utime,jdbcType=VARCHAR}
    where absorber = #{absorber,jdbcType=VARCHAR}
  </update>
</mapper>