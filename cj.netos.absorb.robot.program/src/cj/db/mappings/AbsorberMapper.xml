<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.absorb.robot.mapper.AbsorberMapper">
  <resultMap id="BaseResultMap" type="cj.netos.absorb.robot.model.Absorber">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="bankid" jdbcType="VARCHAR" property="bankid" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="proxy" jdbcType="VARCHAR" property="proxy" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="radius" jdbcType="VARCHAR" property="radius" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="ctime" jdbcType="VARCHAR" property="ctime" />
    <result column="exit_expire" jdbcType="VARCHAR" property="exitExpire" />
    <result column="exit_amount" jdbcType="BIGINT" property="exitAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    id, title, `type`, bankid, category, proxy, `location`, radius, creator, ctime, exit_expire, 
    exit_amount
  </sql>
  <select id="selectByExample" parameterType="cj.netos.absorb.robot.model.AbsorberExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from absorber
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from absorber
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from absorber
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.absorb.robot.model.AbsorberExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from absorber
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.absorb.robot.model.Absorber">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into absorber (id, title, `type`, 
      bankid, category, proxy, 
      `location`, radius, creator, 
      ctime, exit_expire, exit_amount
      )
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{bankid,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, #{proxy,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{radius,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=VARCHAR}, #{exitExpire,jdbcType=VARCHAR}, #{exitAmount,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.absorb.robot.model.Absorber">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into absorber
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="bankid != null">
        bankid,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="proxy != null">
        proxy,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="radius != null">
        radius,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="exitExpire != null">
        exit_expire,
      </if>
      <if test="exitAmount != null">
        exit_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        #{bankid,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="proxy != null">
        #{proxy,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="radius != null">
        #{radius,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="exitExpire != null">
        #{exitExpire,jdbcType=VARCHAR},
      </if>
      <if test="exitAmount != null">
        #{exitAmount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.absorb.robot.model.AbsorberExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from absorber
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.bankid != null">
        bankid = #{record.bankid,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.proxy != null">
        proxy = #{record.proxy,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        `location` = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.radius != null">
        radius = #{record.radius,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=VARCHAR},
      </if>
      <if test="record.exitExpire != null">
        exit_expire = #{record.exitExpire,jdbcType=VARCHAR},
      </if>
      <if test="record.exitAmount != null">
        exit_amount = #{record.exitAmount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber
    set id = #{record.id,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      bankid = #{record.bankid,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      proxy = #{record.proxy,jdbcType=VARCHAR},
      `location` = #{record.location,jdbcType=VARCHAR},
      radius = #{record.radius,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=VARCHAR},
      exit_expire = #{record.exitExpire,jdbcType=VARCHAR},
      exit_amount = #{record.exitAmount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.absorb.robot.model.Absorber">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="bankid != null">
        bankid = #{bankid,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="proxy != null">
        proxy = #{proxy,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="radius != null">
        radius = #{radius,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=VARCHAR},
      </if>
      <if test="exitExpire != null">
        exit_expire = #{exitExpire,jdbcType=VARCHAR},
      </if>
      <if test="exitAmount != null">
        exit_amount = #{exitAmount,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.absorb.robot.model.Absorber">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update absorber
    set title = #{title,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      bankid = #{bankid,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      proxy = #{proxy,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      radius = #{radius,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=VARCHAR},
      exit_expire = #{exitExpire,jdbcType=VARCHAR},
      exit_amount = #{exitAmount,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>